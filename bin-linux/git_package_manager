#!/usr/bin/env bash

# Name:     git-package-manager
# Author:   David Vogel <david@davidvogel.xyz>
# Date:     2025 Sep 14, Sun
# License:  GPL v3.0
# Desc:     `git-package-manager` makes managing Git repos easy

SRC_DIR="${HOME}/.local/src"
PULL_CHECK="Already up to date."

git_mgmt() {
    if ! [[ -d .git ]]; then
        dirs_not_repos+=("$dir")
        return 0
    fi

    echo "[INFO]: Attempting to update \"$dir\"."

    git fetch > /dev/null 2>&1

    if [[ "$?" == 128 ]]; then
        repos_bad_fetch+=("$dir")
        return 0
    fi

    OUTPUT=$(git pull 2>/dev/null)

    if [[ "$?" == 128 ]]; then
        repos_bad_pull+=("$dir")
        return 0
    fi

    if [[ "$OUTPUT" == "$PULL_CHECK" ]]; then
        repos_no_change+=("$dir")
        return 0
    fi

    if ! [[ "$OUTPUT" == "$PULL_CHECK" ]]; then
        repos_updated+=("$dir")
    fi
}

gpm-loop() {
    for dir in *; do
        if ! [[ -d $dir ]]; then
            not_dirs+=("$dir")
            continue
        fi

        cd $dir

        # operate within dir
        git_mgmt

        cd ..
    done
}

gpm-results() {
    if ! [[ "${#repos_no_change[@]}" == 0 ]]; then
        echo
        echo "[INFO]: The following directories were already up-to-date:"

        printf -- "- %s\n" "${repos_no_change[@]}"
    fi

    if ! [[ "${#repos_updated[@]}" == 0 ]]; then
        echo
        echo "[INFO]: The following directories were updated successfully:"

        printf -- "- %s\n" "${repos_updated[@]}"
    fi

    if ! [[ "${#not_dirs[@]}" == 0 ]]; then
        echo
        echo "[INFO]: The following objects are not directories:"

        printf -- "- %s\n" "${not_dirs[@]}"
    fi

    if ! [[ "${#dirs_not_repos[@]}" == 0 ]]; then
        echo
        echo "[INFO]: The following directories are not Git repos:"

        printf -- "- %s\n" "${dirs_not_repos[@]}"
    fi

    if ! [[ "${#repos_bad_fetch[@]}" == 0 ]]; then
        echo
        echo "[WARN]: The following directories did not fetch cleanly:"

        printf -- "- %s\n" "${repos_bad_fetch[@]}"
    fi

    if ! [[ "${#repos_bad_pull[@]}" == 0 ]]; then
        echo
        echo "[WARN]: The following directories did not pull cleanly:"

        printf -- "- %s\n" "${repos_bad_pull[@]}"
    fi
}

main() {
    not_dirs=()
    dirs_not_repos=()
    repos_bad_fetch=()
    repos_bad_pull=()
    repos_no_change=()
    repos_updated=()

    cd $SRC_DIR

    gpm-loop

    gpm-results
}

main
