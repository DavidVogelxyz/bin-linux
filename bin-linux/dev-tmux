#!/usr/bin/env bash

# Name:     dev-tmux
# Author:   David Vogel <david@davidvogel.xyz>
# Date:     2025 Sep 7, Sun
# License:  GPL v3.0
# Desc:     `dev-tmux` allows a user to start `tmux` with a "session loadout".

# CONFIG FILE:
# The script has defaults that will work "out-of-the-box"
# However, to deploy a different set of sessions, the config file should be used
# The script will first look for the config file: `~/.config/dev-tmux/dev-tmux.conf`
# If that file doesn't exist, the script will look for: `~/dev-tmux.conf`
# `SESH` is the primary var that should be set in the config file
# Optionally, `PREF_SESH` can also be set
CONFIG_FILE_NAME="dev-tmux.conf"
CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/dev-tmux"
CONFIG_FILE="${CONFIG_DIR}/${CONFIG_FILE_NAME}"

# `PREF_SESH` will be the open session when `dev-tmux` returns
PREF_SESH="scratch"

# `SESH` is an array of sessions to open
# The format is `"<NAME>:<PATH>"`
# Note that the list's order is preserved
SESH=(
    "homedir:${HOME}"
    "${PREF_SESH}:${HOME}"
)

source_conf() {
    # If main config file path exists, source it
    # If main config file path does NOT exist, check user's home directory
    if [[ -f "$CONFIG_FILE" ]]; then
        source "$CONFIG_FILE"
    elif [[ -f "${HOME}/${CONFIG_FILE_NAME}" ]]; then
        source "${HOME}/${CONFIG_FILE_NAME}"
    fi
}

# NOTE: the `sleep 1` is crucial for preserving the order of the sessions
dt_loop() {
    local total=${#SESH[@]}
    local n=0

    for s in "${SESH[@]}"; do
        local s_name="${s%%:*}"
        local s_path="${s##*:}"
        ((++n))

        echo "[INFO]: Creating session ${n}/${total} - \"$s_name\"."
        tmux new-session -ds "$s_name" -c $s_path
        sleep 1
    done
}

main() {
    source_conf
    dt_loop
    echo "[INFO]: Attaching to \"${PREF_SESH}\"."
    tmux a -t ${PREF_SESH}
}

main
